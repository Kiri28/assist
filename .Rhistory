history(max.show=Inf)
test <- history()
assist()
runApp('shiny-dialog')
str_c(c("test"))
str_c(c("test","du"))
str_join(c("test","du"))
str_c(c("test","du"))
?str_c
str_c("",c("test","du"))
str_c("",c("test","du"),sep=",")
paste(c('A', 'B', 'C'), collapse=', ' )
paste(c('A'), collapse=', ' )
runApp('shiny-dialog')
a <- "ls()"
eval(parse( text=a ))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
runApp('shiny-dialog')
describe(ii, Sepal.Length)
runApp('shiny-dialog')
test()
runApp('shiny-dialog')
runApp('shiny-dialog')
runApp('shiny-dialog')
runApp('shiny-dialog')
runApp('shiny-dialog')
runApp('shiny-dialog')
describe(ii, Sepal.Width)
runApp('shiny-dialog')
runApp('shiny-dialog')
runApp('shiny-dialog')
assist()
assist()
assist()
eval(parse( text=command ), envir = .GlobalEnv)
eval(parse( text=command ), envir = .GlobalEnv)
assist()
assist()
source('~/GitHub/assist/R/assist.R', echo=TRUE)
assist()
eval(parse( text=command ), envir = .GlobalEnv)
assist()
source('~/GitHub/assist/R/assist.R', echo=TRUE)
assist()
source('~/GitHub/assist/R/assist.R', echo=TRUE)
assist()
source('~/GitHub/assist/R/assist.R', echo=TRUE)
command
source('~/GitHub/assist/R/assist.R', echo=TRUE)
assist()
source('~/GitHub/assist/R/assist.R', echo=TRUE)
assist()
source('~/GitHub/assist/R/assist.R', echo=TRUE)
assist()
source('~/GitHub/assist/R/assist.R', echo=TRUE)
assist()
assist()
source('~/GitHub/assist/R/assist.R', echo=TRUE)
assist()
source('~/GitHub/assist/R/assist.R', echo=TRUE)
assist()
assist()
test <- assist()
test
runApp('shiny-dialog')
runApp('shiny-dialog')
runApp('shiny-dialog')
runApp('shiny-dialog')
assist()
runApp('shiny-dialog')
runApp('shiny-dialog')
runApp('shiny-dialog')
paste("hej", ' <- ')
runApp('shiny-dialog')
assist()
test
runApp('shiny-dialog')
print(testinput)
runApp('shiny-dialog')
runApp('shiny-dialog')
runApp('shiny-dialog')
runApp('shiny-dialog')
runApp('shiny-dialog')
runApp('shiny-dialog')
runApp('shiny-dialog')
runApp('shiny-dialog')
rm(menu_choice)
runApp('shiny-dialog')
runApp('shiny-dialog')
install.packages("rjson")
??rjson
?rjson
??dplyr
install.packages("jsonlite")
??jsonlite
sapply(ii, mean, na.rm=TRUE)
sapply(ii, c(min,mean), na.rm=TRUE)
sapply(c(mean, min), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean, min), function(x){sapply(iris, x, na.rm=TRUE)})
a <- sapply(c(mean, min), function(x){sapply(ii, x, na.rm=TRUE)})
colnames(a) <- c("mean","min")
a
sapply(ii, "mean", na.rm=TRUE)
?sapply
a <- sapply(c(mean, min), function(x){sapply(ii, x, na.rm=TRUE)}, USE.NAMES = TRUE)
a
library(Hmisc)
describe(mydata)
describe(ii)
library(doBy)
summaryBy(mpg + wt ~ cyl + vs, data = mtcars,
FUN = function(x) { c(m = mean(x), s = sd(x)) } )
install.packages("doBy")
library(doBy)
summaryBy(mpg + wt ~ cyl + vs, data = mtcars,
FUN = function(x) { c(m = mean(x), s = sd(x)) } )
?options
ddply(mtcars, .(group), summarise, mean=mean(mpg), sum=sum(mpg))
library(plyr)
ddply(mtcars, .(group), summarise, mean=mean(mpg), sum=sum(mpg))
describe(mtcars)
ddply(mtcars, .(cyl), summarise, mean=mean(mpg), sum=sum(mpg))
a <- sapply(c(mean, min,count, function(x){sapply(ii, x, na.rm=TRUE)})
)
a <- sapply(c(mean, min,count), function(x){sapply(ii, x, na.rm=TRUE)})
mtcars %.%
group_by (am, gear) %.%
summarise (n=n())
mtcars %>%
group_by (am, gear) %>%
summarise (n=n())
mtcars %>%
group_by (am, gear) %>%
summarise(n=n())
mtcars %>%
group_by (am, gear) %>%
summarise(n())
mtcars %>%
group_by (am, gear) %>%
summarise_each(n())
mtcars %>%
group_by (am, gear) %>%
summarise_each(n)
mtcars %>%
group_by (am, gear) %>%
summarise_each(funs(n))
mtcars %>%
group_by (am, gear) %>%
summarise_each(funs(sum)
)
mtcars %>%
group_by (am, gear) %>%
summarise(funs(sum))
?summarise
mtcars %>% group_by(cyl) %>% summarise(a = n(), b = a + 1)
by_cyl <- mtcars %>% group_by(cyl)
by_cyl %>% summarise(a = n(), b = a + 1)
devtools::install_github("hadley/lazyeval")
devtools::install_github("hadley/dplyr")
devtools::install_github("hadley/lazyeval")
devtools::install_github("hadley/dplyr")
?summarise
?summarise
by_cyl <- mtcars %>% group_by(cyl)
library(dplyr)
by_cyl <- mtcars %>% group_by(cyl)
by_cyl <- mtcars %>% group_by(cyl)
library(dplyr)
by_cyl <- mtcars %>% group_by(cyl)
by_cyl %>% summarise(a = n(), b = a + 1)
iris %>% select(1:4) %>% summarise_each(funs(n))
iris %>% select(1:4) %>% summarise_each(n)
by_cyl %>% summarise(n = n())
iris %>% select(1:4) %>% summarise(a=n())
iris  %>% summarise(a=n())
??mosaic
assist()
iris %>% select(is.numeric(.))
iris %>% select(is.numeric(.))
is.numeric(iris)
?parse
summary(iris)
iris %>% mutate(Species2 = as.numeric(Species)) -> ii
describe(ii)
jj <- list(describe(ii), describe(ii))
print(jj)
sapply(c(mean, min), function(x){sapply(ii, x, na.rm=TRUE)})
ii <- ii[-5]
sapply(c(mean, min), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean, min, n=sum(1) ), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean, min, n=sum(0*x+1) ), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean, min, n=sum(0*.+1) ), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean, min, n=function(x)sum(0*x+1) ), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean, min, n=function(x,y)sum(0*x+1,y) ), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean, min, n=function(x,...)sum(0*x+1,...) ), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean, min, n=function(x,...)sum(1,...) ), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean=mean, min=min, n=function(x,...)sum(1,...) ), function(x){sapply(ii, x, na.rm=TRUE)})
?is.na
sapply(c(mean=mean, min=min, n=function(x,...)sum(1-is.na(x))), function(x){sapply(ii, x, na.rm=TRUE)})
z <- sapply(c(mean=mean, min=min, n=function(x,...)sum(1-is.na(x))), function(x){sapply(ii, x, na.rm=TRUE)})
by_cyl
by_cyl[1,1]  <- NA
by_cyl
by_cyl %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
by_cyl %>% describe()
View(by_cyl)
by_cyl[1,1]  <- 2
by_cyl %>% describe()
debugSource('~/GitHub/assist/R/describe.R', echo=TRUE)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
by_cyl %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
by_cyl %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
by_cyl %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
by_cyl %>% describe()
as.data.frame(by_cyl %>% describe())
z <- as.data.frame(by_cyl %>% describe())
View(z)
by_cyl[1,1]  <- NA
as.data.frame(by_cyl %>% describe())
?factor
labels(iris$Species)
levels(iris$Species)
z <- levels(iris$Species)
z <- paste(levels(iris$Species),sep = '/')
?paste
paste(levels(iris$Species),sep = '/')
str_c(levels(iris$Species))
library(stringr)
str_c(levels(iris$Species))
?str_c
str_c(levels(iris$Species),sep = ' ')
str_c(as.character(levels(iris$Species)),sep = ' ')
str_c(c("a", NA, "b"), "-d")
str_join(c("a", NA, "b"), "-d")
paste(levels(iris$Species), collapse = '')
paste(levels(iris$Species), collapse = '/')
str_c(levels(iris$Species), collapse = '/')
factor(a=c(0,1))
factor(c(0,1))
str_c(levels(factor(c(0,1))), collapse = '/')
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% describe()
iris %>% mutate_each(funs(as.numeric)) %>% describe()
iris %>% mutate_each(funs(as.numeric))
iris %>% mutate_each(funs(as.numeric)) %>% describe(Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% mutate_each(funs(as.numeric)) %>% describe(Species)
sapply(iris,is.factor)
sapply(iris,function(x)ifelse(is.factor(x)1,0) )
sapply(iris,function(x)ifelse(is.factor(x),1,0) )
sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') )
t(sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') ))
sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') )
as.data.frame(sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') ))
as.data.frame(factors=sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') ))
as.data.frame(sapply(iris,x=function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') ))
as.data.frame(sapply(iris,fac=function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') ))
as.data.frame(factors=sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') ))
as.data.frame(sapply(iris,x=function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') ))
sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') )
z <- sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') )
z <- t(sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') ))
z <- sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') )
z
source('~/GitHub/assist/R/describe.R', echo=TRUE)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% mutate_each(funs(as.numeric)) %>% describe(Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% mutate_each(funs(as.numeric)) %>% describe(Species)
zz <- iris %>% mutate_each(funs(as.numeric)) %>% describe(Species)
zz$z <- z
View(zz)
z <- sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') )
source('~/GitHub/assist/R/describe.R', echo=TRUE)
zz <- iris  %>% describe(Species)
zz <- iris  %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris  %>% describe(Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris  %>% describe(Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris  %>% describe(Species)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
describe(iris)
vars <- c("Petal.Length", "Petal.Width")
select(iris, one_of(vars))
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
describe(iris,Species,Petal.Length)
describe(iris,Petal.Width,Petal.Length)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Petal.Width,Petal.Length)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Petal.Width,Petal.Length)
describe(iris,Species,Petal.Length)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
length(iris)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
z <- describe(iris,Species)
colnames(z) <- c("mean","min","max","n")
source('~/GitHub/assist/R/describe.R', echo=TRUE)
z <- describe(iris,Species)
z
z <- as.matrix(describe(iris,Species))
z
z <- t(as.matrix(describe(iris,Species)))
z
colnames(z) <- c("mean","min","max","n")
z
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)  %>% describe()
describe(iris,Species)[-5]  %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)[-5]  %>% describe()
select
lazyeval::lazy_dots
library(lazyeval)
interp("x + y", x = 10)
interp(~ x + y, x = 10)
interp(x,h)
interp(ff,h)
interp(~ff,h)
interp(~ff,h=10)
devtools::install_github('yihui/knitr', build_vignettes = TRUE)
devtools::install_github('yihui/knitr', build_vignettes = TRUE)
