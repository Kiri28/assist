iris %>% select(is.numeric(.))
is.numeric(iris)
?parse
summary(iris)
iris %>% mutate(Species2 = as.numeric(Species)) -> ii
describe(ii)
jj <- list(describe(ii), describe(ii))
print(jj)
sapply(c(mean, min), function(x){sapply(ii, x, na.rm=TRUE)})
ii <- ii[-5]
sapply(c(mean, min), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean, min, n=sum(1) ), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean, min, n=sum(0*x+1) ), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean, min, n=sum(0*.+1) ), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean, min, n=function(x)sum(0*x+1) ), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean, min, n=function(x,y)sum(0*x+1,y) ), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean, min, n=function(x,...)sum(0*x+1,...) ), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean, min, n=function(x,...)sum(1,...) ), function(x){sapply(ii, x, na.rm=TRUE)})
sapply(c(mean=mean, min=min, n=function(x,...)sum(1,...) ), function(x){sapply(ii, x, na.rm=TRUE)})
?is.na
sapply(c(mean=mean, min=min, n=function(x,...)sum(1-is.na(x))), function(x){sapply(ii, x, na.rm=TRUE)})
z <- sapply(c(mean=mean, min=min, n=function(x,...)sum(1-is.na(x))), function(x){sapply(ii, x, na.rm=TRUE)})
by_cyl
by_cyl[1,1]  <- NA
by_cyl
by_cyl %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
by_cyl %>% describe()
View(by_cyl)
by_cyl[1,1]  <- 2
by_cyl %>% describe()
debugSource('~/GitHub/assist/R/describe.R', echo=TRUE)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
by_cyl %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
by_cyl %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
by_cyl %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
by_cyl %>% describe()
as.data.frame(by_cyl %>% describe())
z <- as.data.frame(by_cyl %>% describe())
View(z)
by_cyl[1,1]  <- NA
as.data.frame(by_cyl %>% describe())
?factor
labels(iris$Species)
levels(iris$Species)
z <- levels(iris$Species)
z <- paste(levels(iris$Species),sep = '/')
?paste
paste(levels(iris$Species),sep = '/')
str_c(levels(iris$Species))
library(stringr)
str_c(levels(iris$Species))
?str_c
str_c(levels(iris$Species),sep = ' ')
str_c(as.character(levels(iris$Species)),sep = ' ')
str_c(c("a", NA, "b"), "-d")
str_join(c("a", NA, "b"), "-d")
paste(levels(iris$Species), collapse = '')
paste(levels(iris$Species), collapse = '/')
str_c(levels(iris$Species), collapse = '/')
factor(a=c(0,1))
factor(c(0,1))
str_c(levels(factor(c(0,1))), collapse = '/')
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% describe()
iris %>% mutate_each(funs(as.numeric)) %>% describe()
iris %>% mutate_each(funs(as.numeric))
iris %>% mutate_each(funs(as.numeric)) %>% describe(Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% mutate_each(funs(as.numeric)) %>% describe(Species)
sapply(iris,is.factor)
sapply(iris,function(x)ifelse(is.factor(x)1,0) )
sapply(iris,function(x)ifelse(is.factor(x),1,0) )
sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') )
t(sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') ))
sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') )
as.data.frame(sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') ))
as.data.frame(factors=sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') ))
as.data.frame(sapply(iris,x=function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') ))
as.data.frame(sapply(iris,fac=function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') ))
as.data.frame(factors=sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') ))
as.data.frame(sapply(iris,x=function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') ))
sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') )
z <- sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') )
z <- t(sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') ))
z <- sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') )
z
source('~/GitHub/assist/R/describe.R', echo=TRUE)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% mutate_each(funs(as.numeric)) %>% describe(Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% mutate_each(funs(as.numeric)) %>% describe(Species)
zz <- iris %>% mutate_each(funs(as.numeric)) %>% describe(Species)
zz$z <- z
View(zz)
z <- sapply(iris,function(x)ifelse(is.factor(x),str_c(levels(x), collapse = '/'), '') )
source('~/GitHub/assist/R/describe.R', echo=TRUE)
zz <- iris  %>% describe(Species)
zz <- iris  %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris  %>% describe(Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris  %>% describe(Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris  %>% describe(Species)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
describe(iris)
vars <- c("Petal.Length", "Petal.Width")
select(iris, one_of(vars))
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
describe(iris,Species,Petal.Length)
describe(iris,Petal.Width,Petal.Length)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Petal.Width,Petal.Length)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Petal.Width,Petal.Length)
describe(iris,Species,Petal.Length)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
length(iris)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
z <- describe(iris,Species)
colnames(z) <- c("mean","min","max","n")
source('~/GitHub/assist/R/describe.R', echo=TRUE)
z <- describe(iris,Species)
z
z <- as.matrix(describe(iris,Species))
z
z <- t(as.matrix(describe(iris,Species)))
z
colnames(z) <- c("mean","min","max","n")
z
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)  %>% describe()
describe(iris,Species)[-5]  %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
describe(iris,Species)[-5]  %>% describe()
select
lazyeval::lazy_dots
library(lazyeval)
interp("x + y", x = 10)
interp(~ x + y, x = 10)
interp(x,h)
interp(ff,h)
interp(~ff,h)
interp(~ff,h=10)
devtools::install_github('yihui/knitr', build_vignettes = TRUE)
devtools::install_github('yihui/knitr', build_vignettes = TRUE)
devtools::install_github('yihui/knitr', build_vignettes = TRUE)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
cars %>% describe()
library(dplyr)
cars %>% describe()
ifelse(a <- TRUE,a,0)
paste(2,"times")
source('~/GitHub/assist/R/describe.R', echo=TRUE)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
cars %>% describe()
iris %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% describe()
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% describe()
iris %>% describe(Species)
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% describe(Species)
library(dplyr)
iris %>% describe(starts_with("Petal"))
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% describe(starts_with("Petal"))
source('~/GitHub/assist/R/describe.R', echo=TRUE)
iris %>% describe(starts_with("Petal"))
iris %>% describe()
iris %>% describe(Species)
dplyr::glimpse(iris)
source('~/GitHub/assist/R/assist.R', echo=TRUE)
assist()
assist()
source('~/GitHub/assist/R/assist.R', echo=TRUE)
assist()
setwd("~/GitHub/assist/R")
assist()
assist()
source('~/GitHub/assist/R/assist.R', echo=TRUE)
assist()
assist()
source('~/GitHub/assist/R/assist.R', echo=TRUE)
assist()
assist()
assist()
assist()
eval(parse( text = c("ls()","ls()") ), envir = .GlobalEnv)
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist <- function(domenu = FALSE) {
require(shiny)
message("Select menu alternatives in the Viewer pane, or press Esc to cancel")
runApp()
eval(parse( text = command ), envir = .GlobalEnv)
}
assist()
assist()
source("describe.R")
assist()
assist()
setwd("~/GitHub/assist/R")
install.packages("printr")
dev_tools::load_all
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
dev_tools::load_all()
load_all()
install.packages("packrat")
library(assist)
library(assist)
iris %>% describe
library(dplyr)
iris %>% describe
assist()
runApp('R')
ads <- describe(iris, Sepal.Length, Petal.Length)
ads
assist()
setwd("~/GitHub/assist/R")
assist()
assist()
assist()
assist()
assist()
assist()
assist()
library(assist)
assist()
library(assist)
assist()
assist()
library(assist)
assist()
assist()
setwd("~/GitHub/assist/R")
assist()
library(assist)
assist()
setwd("~/GitHub/assist/R")
assist()
assist()
library(assist)
assist()
iris %>% describe()
iris %>% describe(matches("Sep"))
iris %>% describe(matches("Sep"))
assist()
assist()
assist()
assist()
setwd("~/GitHub/assist/R")
assist()
setwd("~/GitHub/assist/R")
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
assist()
iris %>% glimpse()
iris %>% glimpse() ->rr
setwd("~/GitHub/assist/R")
iris %>% describe(matches("Sep"))
describe(iris, matches("Sep"))
?summary
assist()
assist()
assist()
library(assist)
assist()
assist()
library(assist)
assist()
assist()
library(assist)
assist()
library(assist)
library(assist)
?describe
??describe
library(assist)
library(assist)
?describe
library(assist)
devtools::load_all(".")
source('~/GitHub/assist/R/describe.R')
devtools::use_testthat()
describe(cars)
source('~/GitHub/assist/tests/testthat/test_describe.R', echo=TRUE)
library(testthat)
source('~/GitHub/assist/tests/testthat/test_describe.R', echo=TRUE)
source('~/GitHub/assist/tests/testthat/test_describe.R', echo=TRUE)
source('~/GitHub/assist/tests/testthat/test_describe.R', echo=TRUE)
a = describe(cars)
a$min[1] == 4
packrat::init()
install.packages("purrr")
df <- tibble(
a = rnorm(10),
b = rnorm(10),
c = rnorm(10),
d = rnorm(10)
)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
df <- tibble(
a = rnorm(10),
b = rnorm(10),
c = rnorm(10),
d = rnorm(10)
)
map_dbl(df, mean)
b=map_dbl(df, mean)
b=map_list(df, mean)
b=map(df, mean)
df$e = rep("x",10)
b=map(df, mean)
print(b)
print(as.data.frame(b))
tbl(a)
tbl(df)
as_tibble(df)
as_tibble(b)
map(df, floor)
df <- tibble(
a = rnorm(10),
b = rnorm(10),
c = rnorm(10),
d = rnorm(10)
)
map(df, floor)
as_tibble(map(df, floor))
df
library(assist)
describe2(cars)
library(assist)
describe2(cars)
library(assist)
describe2(cars)
mtcars %>%
rownames_to_column %>%
gather(var, value, -rowname) %>%
spread(rowname, value)
describe2(cars) %>% mutate(rowname = "mean") %>% gather(var, value, -rowname) %>% spread(rowname, value)
source('~/GitHub/assist/R/describe2.R', echo=TRUE)
source('~/GitHub/assist/R/describe2.R', echo=TRUE)
describe2 <- function(df,...)
{
as_tibble(imap(df, describe_mean))
}
describe_mean <- function(x)
{
list("mean", mean(x))
}
describe2(cars)
describe2(cars)
source('~/GitHub/assist/R/describe2.R', echo=TRUE)
describe2(cars)
source('~/GitHub/assist/R/describe2.R', echo=TRUE)
library(assist)
describe2(cars)
library(assist)
source('~/.active-rstudio-document', echo=TRUE)
library(assist)
describe2(cars)
library(assist)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(assist)
source('~/.active-rstudio-document', echo=TRUE)
describe2 <- function(df,...)
{
mutate_if(df, is.character, str_length)
}
describe2(df)
source('~/GitHub/assist/R/describe2.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/GitHub/assist/R/describe2.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/GitHub/assist/R/describe2.R', echo=TRUE)
source('~/GitHub/assist/R/describe2.R', echo=TRUE)
source('~/GitHub/assist/R/describe2.R')
source('~/.active-rstudio-document', echo=TRUE)
library(assist)
source('~/.active-rstudio-document', echo=TRUE)
source('~/GitHub/assist/R/describe2.R')
source('~/.active-rstudio-document', echo=TRUE)
sapply(df, class)
df2 = describe2(df)
sapply(df, class)
df2 %>% mutate(rowname = "mean") %>% gather(var, value, -rowname) %>% spread(rowname, value) %>% as.data.frame()
library(assist)
source('~/.active-rstudio-document', echo=TRUE)
df2 %>%  gather(var, value)
source('~/.active-rstudio-document', echo=TRUE)
xx = sapply(df, class)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
